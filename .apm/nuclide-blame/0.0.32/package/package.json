{"consumedServices":{"nuclide-blame-provider":{"versions":{"0.0.0":"consumeBlameProvider"}},"nuclide-blame-ui.gutter":{"versions":{"0.0.0":"consumeBlameGutterClass"}}},"dependencies":{"nuclide-analytics":"0.0.32","nuclide-logging":"0.0.32"},"description":"Combines blame information providers and UI to create a blame feature.","devDependencies":{"nuclide-external-interfaces":"0.0.32"},"engines":{"atom":">=1.0.9"},"license":"SEE LICENSE IN LICENSE","main":"./lib/main","name":"nuclide-blame","nuclide":{"packageType":"Atom","testRunner":"apm"},"repository":{"type":"git","url":"git+https://github.com/facebooknuclideapm/nuclide-blame.git"},"version":"0.0.32","readme":"**NOTE:** The official repository for this package is https://github.com/facebook/nuclide.\nPlease file all issues and pull requests there.\n\n# nuclide-blame\n\nDisplays source control blame.\n\n![Blame Gutter](readme/blameGutter.png)\n\n## Prerequisites\n\nThe `nuclide-blame` package requires at least two other packages to function: at\nleast one \"blame provider\" package that fetches blame information; and exactly\none \"blame UI\" package that consumes the information and displays it.\n\nNuclide currently provides the `nuclide-blame-provider-hg` package, which\ncan fetch blame for files within Mercurial repositories. To support other types\nof source control, you would need other blame provider packages.\n\nNuclide also provides the `nuclide-blame-ui` package, which displays\nblame information in a custom gutter on an editor.\n\n## How to Use\n\nTo open blame, right-click in the body of an editor to open the context menu,\nthen select 'Show Blame'. 'Show Blame' will only be visible if you have a blame\nprovider package installed that can provide blame for the file in that editor.\nTo remove blame, open the context menu as above, and select 'Hide Blame'.\n\n![How to Open Blame](readme/showBlame.png)\n\n## How to Write a Blame Provider\n\nSee the `nuclide-blame-provider-hg` Atom package as an example. A blame provider\npackage should provide a service called `\"nuclide-blame-provider\"` through the Atom\nservice hub. This service should return a provider Object that implements the\nfollowing methods:\n\n```js\n/**\n * @return Whether the provider can provide blame information for the specified TextEditor.\n */\ncanProvideBlameForEditor(editor: TextEditor) => boolean\n\n/**\n * @return Map where the keys are 0-indexed TextBuffer line numbers, and values are blame.\n */\ngetBlameForEditor(editor: TextEditor) => Promise<Map<number, string>>\n```\n\nIt should also implement the following method, so long as it has a non-trivial implementation:\n\n```js\n/**\n * Tries to find a URL that contains more information about the revision. If no such URL exists,\n * returns null.\n */\ngetUrlForRevision: (editor: TextEditor, revision: string) => Promise<?string>\n```\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/facebooknuclideapm/nuclide-blame/issues"},"homepage":"https://github.com/facebooknuclideapm/nuclide-blame#readme","_id":"nuclide-blame@0.0.32","_shasum":"f3d97518ec3c026855b47926c1d0d88c7de66224","_resolved":"file:../d-115823-55483-155o5zf/package.tgz","_from":"../d-115823-55483-155o5zf/package.tgz"}